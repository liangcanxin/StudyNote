//单行注释，不会被编译出来

/*
    多行注释，就是CSS的注释方式，会被编译出来
*/

$number:123px;
$key:margin;
$i:1;

.box#{i}{
    width: $number;
    height: $number;
    #{$key}:auto;
}

//Sass的作用域是有顺序的
.box2{
    height: $number;    //和less的差别
    $number:456px;
    width: $number;
}

ul{
    list-style-type: disc;
    li{
        float: left;
        div{margin: $number;}
        p{margin: $number;}
    }
    &:hover{
        color: red;
        //只有scss存在以下嵌套方式--属性嵌套
        font : {
            size: 10px;
            weight:bold;
            family:宋体;
        }
    }
}

$num:100px;

.box3{
    width: $num * 3;
    //Sass中如果单位不同的话，是不能运算
    // height: $num +20em;
    font: 20px / 1.5;
    //默认/是分割操作
    padding: 20px / 1.5;
    margin: (20px / 1.5);
    color: #010203 * 2;
}


//自定义函数
@function sum($n,$m){
    @return $n + $m;
}

.box4{
    width: round(3.5px);
    height: percentage(0.2);
    margin: random();
    //没有sqrt函数
    padding: sqrt(25%);
    font-size: sum(4px, 5px);
}

@mixin show {
    display: block;
}
@mixin showcolor($color) {
    color: $color;
}

.box5{
    width: 100px;
    @include show;
    @include showcolor(blue);
}

.line{
    display: inline;
}

.box6{
    @extend .line;
}
.box7{
    @extend .line;
}

%line{
    display: inline;
}

.box8{
    @extend %line;
}

$background : (
    a : url(a.png),
    b : url(b.png)
);
$tranform : (
    a : scale(2),
    b : rotate(30deg)
);

.box9{
    background : map-values($background);
    transform: zip(map-values($tranform)...);
}

.box9{
    width: 100px;
    @media screen and (min-width: 768px){
        width: 600px;
    }
    @media screen and (min-width:1440px){
        width: 900px
    }
}

$count : 5;

.box10{
    @if ($count > 4) {
        width: 100px + $count;
    }
    @else{
        width: 10px + $count;
    }
}

@for $i from 0 through 2{
    .box-#{$i}{
        width: 100px + $i;
    }
}

@import './reset2.scss'