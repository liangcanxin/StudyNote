1. HTML与XHTML区别？

    DOCTYPE文档及编码
    元素大小写
    属性布尔值
    属性引号
    图片的alt属性
    单标签写法
    双标签闭合

2. strong与b、em与i？

    strong和em都是表示强调的标签，表现形态为文本加粗和斜体
    b和i标签也分别表示文本加粗和斜体

    区别：
    strong和em是具备语义化的
    b和i是不具备语义化的

    具体应用场景：
    这四个标签实际上都是内联标签，通过使用，可以简化编码。
        如：
        <i>
            <strong></strong>
            <span></span>
        </i>
        =====================
        <span class="i-tab">
            <span class="s-tab"></span>
            <span class="sp-tab"></span>
        </span>
        显然，上述第一种要明显简化很多，利于写css样式

3. 引用标签？

    blockquote：引用大段的段落解释
    q：引用小段的短语解释
    abbr：缩写或首字母缩略词
    address：引用文档地址信息
    cite：引用著作的标题

    作用：
    语义化标签，规范编码
    利于搜索引擎搜索该网页内容

4. iframe嵌套页面标签？

    可以引入其他html到当前html中显示

    主要是利用iframe的属性进行样式的调节

    属性：
        frameborder：规定显示框架周围的边框
        width：定义iframe宽度，当设置100%时，将显示原网页的整个宽度
        height：定义iframe高度，设置100%不能显示原网页的整个高度
        scrolling：规定是否在iframe中显示滚动条
        src：规定iframe中引入的URL
        srcdoc：规定iframe中显示的页面内容(当同时引入时，显示的将是srcdoc的内容，而不会跳转到src中)；在srcdoc中添加html标签也是可以显示出来的

    不法使用：用该标签实际可以制作钓鱼网站（只是在该标签显示的界面上添加一个透明层，当用户点击输入内容时，实际上是在透明层上操作，从而可以获得用户的相关输入--如密码等信息）
             实际上通过查看网址一般可以辨别

    应用场景：数据传输、共享代码、局部刷新、第三方介入等

5. br与wbr？(用的不多，了解即可)

    br标签表示换行操作，wbr标签表示软换行操作

    如果单词太长，或者担心浏览器会在错误的位置换行，那么可以使用wbr标签来添加word break opportunity（单词换行时机）

6. pre与code？

    pre元素可以定义预格式化的文本，被包围在pre元素中的文本通常会保留空格和换行符

    只应该在表示计算机程序源代码或者其他机器可以阅读的文本内容上使用code标签，虽然code标签通常知识把文本变成等宽字体，但是它暗示着这段文本是源程序代码

    是组合使用的，方式：
    <pre>
        <code>
            .....
        </code>
    </pre>
    但是使用较少，一般可以采用其他预编译方式生成（如markdown）

7. map与area？

    给一个图形中的特殊区域添加链接，area能添加的热区的形状有：矩形、圆形、多边形

    area
        href：定义url
        shape：定义区域形状
            取值：rect、circ、poly
        coords：定义热区的坐标
            对于矩形图形，只需左上坐标和右下坐标即可
            对于圆形，只需圆心坐标和圆形半径即可
            对于多边形，需要各个轮廓点的坐标

8. embed与object（用处少，了解）

    给flash和一些插件进行渲染操作的标签

    区别主要是浏览器兼容问题

    此外，object元素需要配合param元素来完成

9. audio与video

    引入音频和视频的标签，属于H5的新功能

    <audio src="" controls loop autoplay></audio>
    controls使音频显示在窗口上，loop循环播放音频，autoplay自动播放

    <video src="" controls loop autoplay></video>

    <video>
        <source src="choose1"></source>
        <source src="choose2"></source>
    </video>
    source用来避免文件在不同浏览器播放不了而定义的备选方案

    如果要定制音频视频的边框展示效果，需要配合js

10. 文字注解与文字方向？

    ruby、rt 这样一个组合实现文字注音或注解
    
    bdo标签可覆盖默认的文本方向，横向反向排列（也可以采用css实现）

    要实现竖向排列文字，可以采用浮动，只要使每行只能容纳一个文字，就可以竖向浮动排列了

11. link扩展学习

    <link rel="stylesheet" type="text/css" href="theme.css">

    <link rel="icon" type="/image/x-icon" href="http://www.mobiletrain.org/favicon.ico">
    引入作用于网页标题(title)前的小图标

    <link rel="dns-prefetch" href="//static.360buying.com">
    dns预解析，使访问速度加快

    link可以理解为引入外部文件资源

12. meta扩展学习

    meta用于添加一些辅助信息，用于网页优化渲染、搜索引擎搜索、渲染浏览器内核等等

    <meta name="description" content="大连美团...">
    <meta name="keywords" content="大连美团">
    <meta name="renderer" content="webkit">（用于兼容内核）

    <meta http-equiv="X-UA-Compatible" content="ie=edge">（用于设置ie浏览器最高版本的网页视图）
    <meta http-equiv="refresh" content="3" url="">（3s后跳转url）
    <meta http-equiv="expires" content="Wed,20 Jun 2019 22:33:00 GMT">（用于缓存处理）

    多关注大厂网站的代码，学习参考

13. html5新语义化标签

    header  ：页眉
    footer  ：页脚
    main    ：主体
    hgroup  ：标题组合
    nav     ：导航

    注：header、footer、main在一个网页中只能出现一次

    article ：独立的内容
    aside   ：辅助信息的内容
    section ：区域
    figure  ：描述图像或视频，与figcaption配合使用
    figcaption：描述图像或视频的标题部分

    datalist：选项列表
    details/summary：文档细节/文档标题（details有open属性）
    progress/meter：定义进度条/定义度量范围
    time    ：定义日期或时间
    mark    ：带有记号的文本

    上述的标签都可以用div，但是那样不利于语义化