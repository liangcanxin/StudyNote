1. 为什么要学习JavaScript？
    
    结构（HTML）
    表现（CSS）
    行为（JS）

    JavaScript的功能：

    1. 网页特效
    2. 用户记住账户名和密码
    3. 网页游戏
    ...

2. 什么是JavaScript？

    官方概念：这是一个跨平台的脚本语言

    平台：就是运行环境，这里一般指操作系统
    脚本语言：不能独立运行，要依赖于网页

    HTML网页运行离不开浏览器，JS程序运行离不开HTML网页

补：web.archive.org 网页博物馆（被qiang）

3. JS基础语法知识

    编辑工具：VSCode
    VSCode下载地址：https://code.visualstudio.com/
    VSCode插件下载：https://www.jb51.net/article/123738.htm 

    1. 认识JavaScript（ECMA定义）

        JavaScript组成
            1. ECAMScript 
            2. DOM 文档
            3. BOM 浏览器

        [注]所有的js代码在一个script标签中编写
            script标签属性：
                1. type='text/javascript' 生命当前标签内写的文本格式（可省略）
                2. src='demo.js' 引入外部的js文件

            注意点：
                1. 可以有多个script标签，多个script标签是自上而下顺序执行
                2. 一个script标签只能专心的做一个事情，引入或编码

        向页面中输出内容：

            1. document.write('这是一些内容');
                在加载页面中输出内容
                【注】如果内容中含有标签会自动解析
                转移字符实现输出'<' '>'

            2. alert('这是一些内容');
                在页面上弹出警告框

            3. console.log('这是一些内容');
                在浏览器调试面板控制台输出内容，一般情况下用于代码调试
                小彩蛋：大公司招聘简介常放置于这里
            
        注释：

            //单行注释  ctrl+/  快捷键
            /*
                多行注释    ctrl+shift+/    快捷键
            */
        
        【注】在编写js代码的时候，要在每一行代码结束的位置加;(分号)，虽然不加也不会报错，但是不规范，而且压缩代码会出现问题

        代码压缩：去掉编写代码的时候，有的所有空格、tab键和换行；代码压缩主要是节省空间（空格等也是占空间的）

4. 常量和变量

    常量：值不可以改变的叫做常量

    数据类型： 
        基本数据类型：
            数字：
                类型：number
                例子：100 -20 3.14
            布尔值：
                类型：boolean
                例子：true/false
            字符串：
                类型：所有带单引号或者双引号的都叫字符串。（单引号/双引号效果一样，但是必须成对出现）
                例子："hello" 'world''100'"3.14"

        复合/引用数据类型(另外介绍)

        特殊数据类型：
            null：空
            undefined
            NaN(not a number)

    变量：值可以被修改的叫做变量

    程序被CPU执行
    【注】程序磁盘读取到内存中，被CPU运行
    了解计算机的组成：
        磁盘    内存    CPU/GPU
    
    关键信息：内存是有空间的，程序本质上是在内存中运行的
    【注】编程就是合理的分配内存

        1. 声明变量（必须声明以后才能使用）
            关键字（系统征用的有特殊功能的单词叫做关键字）：var 声明变量

        2. 初始化：声明变量的时候，直接给这个变量赋值叫做初始化
        3. 如果我们声明变量的时候，没有值赋给这个变量，系统默认赋值为undefined
        4. 提高整个程序运行的效率，可以将声明变量而同时没有值赋给这个变量的时候，默认赋值成null，提高程序运行效率

5. 变量命名和弱引用

    标识符：所有用户自定义的名字叫做标识符
    变量名也是标识符

    命名规则：
        1. 只能由数字、字母、下划线和美元符号($)组成
        2. 不能以数字开头
        3. 不能是保留字和关键字
        4. 大小写敏感 age Age 这是两个完全不同的变量
        5. 见名思意(尽量使用英文全称)
        6. 单词个数超过两个的
            驼峰式命名，如className
            下划线命名，如class_name

    js变量是弱引用类型，赋值成什么数据类型就是什么数据类型
    【注】不建议因此随意改变变量的数据类型，容易引起歧义

    关键字：
        typeof
        格式：typeof 变量/常量
        功能：输出当前常量或变量的数据类型

6. 数值运算符

    1. 算术运算符
        + - * / %
    2. 关系运算符
        > < >= <= == != ...
    3. 逻辑运算符
        && || !
    4. 一元运算符
        ++ --
    5. 赋值运算符
        基本赋值运算符  =
        复合赋值运算符  += -= === !==

    表达式：任何数据和运算符组成的式子叫做表达式
        表达式的值
        表达式的功能

    【注】将不同数据类型进行算数运算
    自动数据类型转换：不同数据类型之间是没有办法进行运算的，将数据转成同一数据类型，再进行计算
        1. 其中一个操作数是字符串，运算符必须是+号，别的数据类型转成字符串，进行字符串拼接
        2. 任何数据和字符串做+加法以外的操作，那么字符串要先转成数字再进行运算
            如果字符串是一个纯数字字符串组成的字符串，转成对应的数字
            如果字符串中含有除数字以外的别的字符，转成NaN，NaN和任何数据运算都是NaN
        3. 除字符串以外的数据，在进行算术运算的时候，先转成数字，再进行运算。如true为1，false为0，null为0

    计算机是不会进行小数运算的（天生有Bug）
    小彩蛋：金融账户，只存储整数，单位是分

    在JS中除数可以为0，如10/0为无穷大，-10/0为无穷小

    a++和++a：前置++和后置++的区别，不建议过分深究

7. 强制数据类型转换

    Boolean()：将其他的数据类型强制转换为布尔值
        口诀：非0为真，非空即真

    Number()：将其他的数据类型强制转换为数字
        【注】只能纯数字字符组成的字符串转数字，才能转为数字，其他都为NaN

    parseInt()：
        取整，可以用于带小数的取整，也可以用于以数字开头的字符串的取整
        将别的进制转成十进制，必须传入字符串，如二进制110100的转换，parseInt("110100",2)

    parseFloat()：取浮点数

8. 关系运算符

    > < == != ...
    【注】值，绝对是布尔值

    自动数据类型转换： 
        一、和其他运算符一样，当关系运算符操作非数值时，要遵循以下规则：
            1. 两个操作数都是数值，则数值比较
            2. 两个操作数都是字符串，则比较两个字符串对应的ASCII
                如果是两个单个字符进行比较，直接比较字符ASCII；
                如果是两个字符串比较，逐位比较
            3. 两个操作数有一个数值，则将另一个转换为数值，再进行数值比较
        
        二、在相等和不等的比较上，如果操作数是非数值，则遵循以下规则：
            1. 一个操作数是布尔值，则比较之前将其转换为数值，false转成 0，true转成 1
            2. 一个操作数是字符串，则比较之前将其转成数值再比较
            3. 一个操作数是NaN，则==返回 false， !=返回 true；并且 NaN 和自身不等
        三、特殊
            1. ===恒等，必须数字和数据类型都相等，才返回true，否则false，如"10"===10, 返回false
            2. null == undefined ，返回true

9. 逻辑运算符

    与运算
        短路操作：当表达式1 为false时，表达式2就不执行了，就直接得出结果为false（后面编程会用）

    或运算，也存在短路操作

    非运算：非空即真，非0即真